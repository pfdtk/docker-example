version: '3.7'
services:
    nginx:
        image: "${NAME_SPACE}/nginx:v1.0"
        restart: always
        build:
            context: ./nginx
            dockerfile: Dockerfile
        volumes:
            - "$PWD/nginx/conf.d:/etc/nginx/conf.d:cached"
            - "${PROJECT_PATH}:/var/www/html:cached"
        ports:
            - "80:80"
        networks:
            lnmp:
                aliases:
                    - ${SERVICE_HOST}
                    - ${VIDEO_HOST}
                    - ${ACCOUNT_HOST}
        depends_on:
            - php
            - php6
    redis:
        image: "${NAME_SPACE}/redis:v1.0"
        restart: always
        build:
            context: ./redis
            dockerfile: Dockerfile
        networks:
            lnmp:
                aliases:
                    - redis
        ports:
            - "6379:6379"
    php:
        image: "${NAME_SPACE}/php:v1.0"
        restart: always
        build:
            context: ./php
            dockerfile: Dockerfile
        volumes:
            - "${PROJECT_PATH}:/var/www/html:cached"
            - "./php/www.conf:/usr/local/etc/php-fpm.d/www.conf:cached"
            - "~/.aws:/root/.aws:cached"
        networks:
            - lnmp
        depends_on:
            - mysql
            - redis
    php6:
        image: "${NAME_SPACE}/php6:v1.0"
        restart: always
        build:
            context: ./php6
            dockerfile: Dockerfile
        volumes:
            - "${PROJECT_PATH}:/var/www/html:cached"
            - "./php6/www.conf:/usr/local/etc/php-fpm.d/www.conf:cached"
            - "~/.aws:/root/.aws:cached"
        networks:
            - lnmp
        depends_on:
            - mysql
            - redis
    phpcli:
        image: "${NAME_SPACE}/phpcli:v1.0"
        build:
            context: ./phpcli
            dockerfile: Dockerfile
        networks:
            - lnmp
        depends_on:
            - redis
    phpcli6:
        image: "${NAME_SPACE}/phpcli6:v1.0"
        build:
            context: ./phpcli6
            dockerfile: Dockerfile
        networks:
            - lnmp
        depends_on:
            - redis
    openldap:
        image: "${NAME_SPACE}/openldap:v1.0"
        restart: always
        build:
            context: ./openldap
            dockerfile: Dockerfile
            args:
                CONF_PATH: "${CONF_PATH}"
                LDAP_USER: "${LDAP_USER}"
                LDAP_PASS: "${LDAP_PASS}"
        networks:
            - lnmp
        volumes:
            - "${PROJECT_PATH}/datastore/openldap:/var/openldap-data:cached"
        ports:
            - "389:389"
    mysql:
        image: "${NAME_SPACE}/mysql:v1.0"
        restart: always
        build:
            context: ./mysql
            dockerfile: Dockerfile
        volumes:
            - "mysql_data:/var/lib/mysql:cached"
        environment:
            TZ: 'Asia/Shanghai'
            MYSQL_ROOT_PASSWORD: ${MYSQL_PASS}
        command: ['mysqld', '--character-set-server=utf8']
        ports:
            - "3306:3306"
        networks:
            - lnmp
    postgres:
        image: "${NAME_SPACE}/postgres:v1.0"
        restart: always
        build:
            context: ./postgresql
            dockerfile: Dockerfile
        volumes:
            - "postgres_data:/var/lib/postgresql/data:cached"
        environment:
            POSTGRES_PASSWORD: ${POSTGRES_PASS}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_DB: "postgres"
        ports:
            - "5432:5432"
        networks:
            - lnmp
    mongo:
        image: "${NAME_SPACE}/mongo:v1.0"
        restart: always
        build:
            context: ./mongo
            dockerfile: Dockerfile
        volumes:
            - "mongo_data:/data/db:cached"
        environment:
            MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
            MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
        command: ['mongod', '--auth']
        ports:
            - "27017:27017"
        networks:
            - lnmp
volumes:
    mysql_data:
    mongo_data:
    postgres_data:

networks:
    lnmp:
